{"version":3,"file":"static/js/675.0b09249b.chunk.js","mappings":"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","sources":["components/AppBar/AppHeaderBar.jsx","pages/SharedLayout/SharedLayout.jsx"],"sourcesContent":["import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Chip from '@mui/material/Chip';\n\nimport IconButton from '@mui/material/IconButton';\nimport NoAccountsIcon from '@mui/icons-material/NoAccounts';\nimport FaceIcon from '@mui/icons-material/Face';\n\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport AdbIcon from '@mui/icons-material/Adb';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as authorizationSelectors from '../../redux/authorization/authorizationsSelectors';\nimport { logout } from 'redux/authorization/authorizationOperations';\n\nconst pages = [\n  { name: 'Home', url: '/', public: true },\n  { name: 'Contacts', url: '/contacts', public: false },\n  { name: 'About', url: '/about', public: true },\n];\nconst settings = [\n  { name: 'Register', url: '/register', private: false },\n  { name: 'Login', url: '/login', private: false },\n];\n\nfunction AppHeaderBar() {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  const navigate = useNavigate();\n  const isLogged = useSelector(authorizationSelectors.getIsLogged);\n  const userName = useSelector(authorizationSelectors.getName);\n  const dispatch = useDispatch();\n\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = url => {\n    setAnchorElNav(null);\n    navigate(url);\n  };\n\n  const handleCloseUserMenu = url => {\n    setAnchorElUser(null);\n    navigate(url);\n  };\n\n  const handleLogout = () => {\n    setAnchorElUser(null);\n    dispatch(logout());\n    navigate('/');\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"/\"\n            sx={{\n              mr: 2,\n              display: { xs: 'none', md: 'flex' },\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            LOGO\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map(\n                page =>\n                  (page.public || (!page.public && isLogged)) && (\n                    <MenuItem\n                      key={page.name}\n                      onClick={() => handleCloseNavMenu(page.url)}\n                    >\n                      <Typography textAlign=\"center\">{page.name}</Typography>\n                    </MenuItem>\n                  )\n              )}\n            </Menu>\n          </Box>\n          <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href=\"\"\n            sx={{\n              mr: 2,\n              display: { xs: 'flex', md: 'none' },\n              flexGrow: 1,\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            LOGO\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map(\n              page =>\n                (page.public || (!page.public && isLogged)) && (\n                  <Button\n                    key={page.name}\n                    onClick={() => navigate(page.url)}\n                    sx={{ my: 2, color: 'white', display: 'block' }}\n                  >\n                    {page.name}\n                  </Button>\n                )\n            )}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                {isLogged ? (\n                  <>\n                    <Chip label={userName} sx={{ mr: 1 }} />\n                    <Avatar>\n                      <FaceIcon />\n                    </Avatar>\n                  </>\n                ) : (\n                  <Avatar>\n                    <NoAccountsIcon />\n                  </Avatar>\n                )}\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {!isLogged &&\n                settings.map(setting => (\n                  <MenuItem\n                    key={setting.name}\n                    onClick={() => handleCloseUserMenu(setting.url)}\n                  >\n                    <Typography textAlign=\"center\">{setting.name}</Typography>\n                  </MenuItem>\n                ))}\n              {isLogged && (\n                <MenuItem key=\"logout\" onClick={handleLogout}>\n                  Logout\n                </MenuItem>\n              )}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\nexport default AppHeaderBar;\n","import AppHeaderBar from 'components/AppBar/AppHeaderBar';\nimport { Outlet } from 'react-router-dom';\n\nconst SharedLayout = () => {\n  return (\n    <>\n      <AppHeaderBar />\n      <Outlet />\n    </>\n  );\n};\n\nexport default SharedLayout;\n"],"names":["pages","name","url","public","settings","private","React","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","navigate","useNavigate","isLogged","useSelector","authorizationSelectors","userName","dispatch","useDispatch","handleCloseNavMenu","handleCloseUserMenu","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Adb","sx","display","xs","md","mr","Typography","variant","noWrap","component","href","fontFamily","fontWeight","letterSpacing","color","textDecoration","Box","flexGrow","IconButton","size","onClick","event","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","textAlign","Button","my","Tooltip","title","p","Chip","label","Avatar","Face","NoAccounts","mt","setting","logout"],"sourceRoot":""}